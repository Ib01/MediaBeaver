<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

 	
 	<!-- maps all annotated controlers under specified package --> 
 	<context:component-scan base-package="com.ibus.mediabeaver.server.controller" />
 	
 	<!-- 
 	<bean id="conversionService" 
 	class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="formatters">
	        <set>
	            <ref bean="com.ibus.mediabeaver.server.controller.ConfigVariableViewModelFormatter" />
	        </set>
	    </property>
	</bean> -->
 	
 	
 	<!-- provides support functionality for things such as parsing incomming types on controler methods  -->   
 	<mvc:annotation-driven/>
 	
 	<!-- <mvc:annotation-driven conversion-service="conversionService"/>
 	
 	<bean id="conversionService"
            class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="com.ibus.mediabeaver.server.controller.ConfigVariableViewModelFormatter"/>
            </set>
        </property>
    </bean> -->
 	
 
	<!-- adds interceptors which can intercept requests as they land at the server allowing you to do work before and after a request --> 
    <mvc:interceptors>
    	<bean class="com.ibus.mediabeaver.server.data.HibernateRequestInterceptor" />
	</mvc:interceptors>
	
	<!-- maps views to resources using view names specified in the controlers and the prifix and suffix --> 
    <bean id="viewResolver" 
    	class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        
        <property name="prefix">
            <value>/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
        
    </bean>
    
    
    
	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<!-- <mvc:view-controller path="/" view-name="welcome"/> -->
	
	<!-- The mvc:resources tag lets you configure a handler for static resources, such as css and javascript files. In this case, 
	requests for /resources/** are mapped to files inside the /resources directory. -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	
	
    
  <!--   <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/welcome.htm">welcomeController</prop>
			</props>
		</property>
		
	</bean> -->
    
    
 
</beans>